import java.util.*;

public class Solution {
    public int solution(int n) {
        
        // 한 번에 K 칸을 앞으로 점프하거나
        // 현재 온 거리 * 2 로 순간이동
        // 건전지는 앞으로 K 칸을 가면 K 만큼 줄어듦
        // N 까지 가는 최소 건전지량
        
        // 10 -> 1칸 전진(1) -> *2 순간이동(2) -> *2 순간이동(4) -> 1칸 앞으로(5) -> *2 순간이동(10) => 2
        // 9 -> 1칸 전진(1) -> *2 순간이동(2) -> *2 순간이동(4) -> *2 순간이동(8) -> 1칸 전진(9) => 2
        // 8 -> 1칸 전진(1) -> *2 순간이동(2) -> *2 순간이동(4) -> *2 순간이동(8) => 1
        // 7 -> 1칸 전진(1) -> *2 순간이동(2) -> 1칸 앞으로(3) -> *2 순간이동(6) -> 1칸 앞으로(1) => 3
        // 6 -> 1칸 전진(1) -> *2 순간이동(2) -> 1칸 앞으로(3) -> *2 순간이동(6) => 2
        // 5 -> 1칸 전진(1) -> *2 순간이동(2) -> *2 순간이동(4) -> 1칸 앞으로(5) => 2
        // 4 -> 1칸 전진(1) -> *2 순간이동(2) -> *2 순간이동(4) => 1
        
        // ‼️‼️ 이렇게 2와 1이 나오는 문제다 ? 홀수 짝수 ? => 이진수 문제라고 떠올리기 ‼️‼️
        
        return Integer.bitCount(n);
    }
}